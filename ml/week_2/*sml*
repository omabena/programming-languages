Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "h1test.sml";
[opening h1test.sml]
[use failed: Io: openIn failed on "h1test.sml", No such file or directory]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test9 = true : boolval test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = false : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- number_before_reaching_sum (5, [3,2,2]) ;
val it = 2 : int
- number_before_reaching_sum (4, [1,4,1,1]);
val it = 2 : int
- number_before_reaching_sum (6, [4,1,1,1]);
val it = 3 : int
- number_before_reaching_sum (10, [1,2,3,4,5]);
val it = 4 : int
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- number_before_reaching_sum (10, [1,2,3,4,5]);
val it = 4 : int
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
-

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = true : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- number_before_reaching_sum (4, [1,4,1,1]);
val it = 2 : int
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = false : bool
val it = () : unit
- what_month 365;
val it = 10 : int
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- what_month 70;
val it = 2 : int
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- what_month 70;
stdIn:1.2-1.12 Error: unbound variable or constructor: what_month
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = false : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = false : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- number_before_reaching_sum(70, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 2 : int
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- number_before_reaching_sum(70, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 1 : int
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = false : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = false : bool
val it = () : unit
- number_before_reaching_sum(365, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 11 : int
- 
- number_before_reaching_sum(365, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 11 : int
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = false : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = false : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = false : bool
val it = () : unit
-  number_before_reaching_sum (4, [1,4,1,1]);
val it = 2 : int
- 
-  number_before_reaching_sum (4, [1,4,1,1]);
val it = 2 : int
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = true : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = true : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = true : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- 
- number_before_reaching_sum(365, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 11 : int
- 
- number_before_reaching_sum(70, [31,28,31,30,31,30,31,31,30,31,30,31]);
val it = 2 : int
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test8_5 = true : bool
val test8_6 = true : bool
val test8_7 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
hw1.sml:84.21 Error: syntax error: inserting  THEN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test8_5 = false : bool
val test8_6 = false : bool
val test8_7 = false : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = false : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = false : bool
val test8_1 = false : bool
val test8_2 = false : bool
val test8_3 = false : bool
val test8_4 = false : bool
val test9 = false : bool
val test9_1 = false : bool
val test9_2 = false : bool
val test9_3 = true : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = false : bool
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = false : bool
val it = () : unit
- what_month 2
= ;
val it = 2 : int
- what_month 31;
val it = 2 : int
- what_month 32;
val it = 2 : int
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:95.14-95.23 Error: unbound variable or constructor: EmptyList
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = true : bool
val it = () : unit
- 
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
hw1.sml:82.61 Error: unbound variable or constructor: l
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = true : bool
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:82.61 Error: unbound variable or constructor: l
hw1.sml:93.11-93.27 Error: unbound variable or constructor: month_range_list
hw1.sml:95.4-95.20 Error: unbound variable or constructor: month_range_list
hw1.sml:92.25-92.49 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * int list
  in expression:
    what_month day2 @ list
hw1.sml:93.27-93.61 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * int list
  in expression:
    what_month day @ list
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:82.61 Error: unbound variable or constructor: l
hw1.sml:92.25-92.49 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * int list
  in expression:
    what_month day2 @ list
hw1.sml:93.27-93.61 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z list * 'Z list
  operand:         int * int list
  in expression:
    what_month day @ list
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:82.61 Error: unbound variable or constructor: l
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:82.61 Error: unbound variable or constructor: l
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val it = () : unit
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val month_range = fn : int * int -> int list
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = true : bool
val test10 = false : bool
val it = () : unit
- month_range(31,34);
val it = [2,2,2,1] : int list
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw1.sml:93.25-93.47 Error: operator and operand don't agree [tycon mismatch]
  operator domain: int list * int list list
  operand:         int list * int
  in expression:
    list :: what_month day
hw1.sml:94.27-94.60 Error: operator and operand don't agree [tycon mismatch]
  operator domain: int list * int list list
  operand:         int list * int
  in expression:
    list :: what_month day
val it = () : unit
hw1test.sml:8.14-8.22 Error: unbound variable or constructor: is_older
hw1test.sml:9.16-9.24 Error: unbound variable or constructor: is_older
hw1test.sml:10.16-10.24 Error: unbound variable or constructor: is_older
hw1test.sml:11.16-11.24 Error: unbound variable or constructor: is_older
hw1test.sml:12.16-12.24 Error: unbound variable or constructor: is_older
hw1test.sml:13.16-13.24 Error: unbound variable or constructor: is_older
hw1test.sml:14.16-14.24 Error: unbound variable or constructor: is_older
hw1test.sml:16.14-16.29 Error: unbound variable or constructor: number_in_month
hw1test.sml:18.14-18.30 Error: unbound variable or constructor: number_in_months
hw1test.sml:20.14-20.28 Error: unbound variable or constructor: dates_in_month
hw1test.sml:22.14-22.29 Error: unbound variable or constructor: dates_in_months
hw1test.sml:24.14-24.21 Error: unbound variable or constructor: get_nth
hw1test.sml:26.14-26.28 Error: unbound variable or constructor: date_to_string
hw1test.sml:28.14-28.40 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:30.16-30.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:31.16-31.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:32.16-32.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:33.16-33.42 Error: unbound variable or constructor: number_before_reaching_sum
hw1test.sml:35.14-35.24 Error: unbound variable or constructor: what_month
hw1test.sml:36.16-36.26 Error: unbound variable or constructor: what_month
hw1test.sml:37.16-37.26 Error: unbound variable or constructor: what_month
hw1test.sml:38.16-38.26 Error: unbound variable or constructor: what_month
hw1test.sml:40.15-40.26 Error: unbound variable or constructor: month_range
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val month_range = fn : int * int -> int list
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = true : bool
val test10 = true : bool
val it = () : unit
- 
- month_range(31, 70);
val it = [1,2,2,2,2,2,2,2,2,2,2,2,...] : int list 
- month_range(59, 70);
val it = [2,3,3,3,3,3,3,3,3,3,3,3] : int list
- 
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Wed Mar 29 08:14:16 2017]
- use "hw1test.sml";
[opening hw1test.sml]
[opening hw1.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val number_in_month = fn : (int * int * int) list * int -> int
val number_in_months = fn : (int * int * int) list * int list -> int
val dates_in_month = fn
  : (int * int * int) list * int -> (int * int * int) list
val dates_in_months = fn
  : (int * int * int) list * int list -> (int * int * int) list
val get_nth = fn : string list * int -> string
val date_to_string = fn : int * int * int -> string
val number_before_reaching_sum = fn : int * int list -> int
val what_month = fn : int -> int
val month_range = fn : int * int -> int list
val it = () : unit
val test1 = true : bool
val test1_1 = true : bool
val test1_2 = true : bool
val test1_3 = true : bool
val test1_4 = true : bool
val test1_5 = true : bool
val test1_6 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val test5 = true : bool
val test6 = true : bool
val test7 = true : bool
val test8 = true : bool
val test8_1 = true : bool
val test8_2 = true : bool
val test8_3 = true : bool
val test8_4 = true : bool
val test9 = true : bool
val test9_1 = true : bool
val test9_2 = true : bool
val test9_3 = true : bool
val test10 = false : bool
val it = () : unit
- month_range(59, 70);
val it = [3,3,3,3,3,3,3,3,3,3,3,2] : int list
- month_range(31,34);
val it = [2,2,2,1] : int list
- 

Process sml finished
